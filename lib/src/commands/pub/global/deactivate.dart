/* Copyright (C) OnePub IP Pty Ltd - All Rights Reserved
 * licensed under the GPL v2.
 * Written by Brett Sutton <bsutton@onepub.dev>, Jan 2022
 */

import 'dart:io';

import 'package:args/command_runner.dart';
import 'package:dcli_terminal/dcli_terminal.dart';

import '../../../api/api.dart';
import '../../../exceptions.dart';
import '../../../onepub_settings.dart' show OnePubSettings;
import '../../../util/one_pub_token_store.dart';

/// Imports a the onepub token generated by the onepub login process
/// and then addes it
class DeactivateCommand extends Command<int> {
  @override
  String get description =>
      blue('Remove a previously activated private package.');

  @override
  String get name => 'deactivate';

  // GlobalPackages? _globals;
  // @override
  // // ignore: overridden_fields
  // late final SystemCache cache = SystemCache();

  // @override
  // GlobalPackages get globals => _globals ??= GlobalPackages(cache);

  // late Iterable<String> args = argResults.rest;

  ///
  // @override
  // Future<void> runProtected() async {
  //   final package = readArg('No package to deactivate given.');

  //   if (!globals.deactivate(
  //     package,
  //   )) {
  //     printerr(red("No package with the name '$package' found."));
  //   }
  // }

  // String readArg([String error = '']) {
  //   if (args.isEmpty) {
  //     usageException(error);
  //   }
  //   final arg = args.first;
  //   args = args.skip(1);
  //   return arg;
  // }

  @override
  Future<int> run() async {
    // cache.setDefault
    await API().checkVersion();
    return deactivate();
  }

  Future<int> deactivate() async {
    if (!await OnePubTokenStore()
        .isLoggedIn(OnePubSettings.use().onepubApiUrl)) {
      throw ExitException(exitCode: 1, message: '''
You must be logged in to run this command.
run: onepub login
  ''');
    }


    final r = await Process.run('dart', [
      'pub',
      'global',
      'deactivate',
      ...(argResults!.rest)
    ]);
    stdout.write(r.stdout);
    stderr.write(r.stderr);
    return r.exitCode;
  }
}
